name: Build
permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch: # This allows this workflow to be called from another workflow
    

jobs:
  build-kernel-oneplus-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup System
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
          
          df -h
          
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/.ghcup /opt/hostedtoolcache/CodeQL /usr/local/share/powershell /usr/share/swift || true
          sudo docker image prune --all --force
          echo "some directories deleted"
          
          # Remove large unwanted packages
          sudo apt-get purge -y \
            aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            firefox gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete \
            unixodbc-dev yarn chrpath libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion microsoft-edge-stable || true
            
          # Regex-based purges (for bulk families like mysql, php, dotnet)
          sudo apt-get purge -y $(dpkg-query -W -f='${binary:Package}\n' | grep -E '^mysql|^php|^dotnet') || true
          
          # Clean up
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "some packages purged"
          
          df -h

      - uses: actions/checkout@v4

      - name: Set CONFIG Environment Variable
        run: |
          CONFIG="OP9"
          echo "Creating folder for configuration: $CONFIG..."
          mkdir -p "$CONFIG"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo and Python
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python3
          sudo apt-get install -y pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler 
          sudo apt-get install -y libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc
          sudo apt-get install -y libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree 
          sudo apt-get install -y pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl 
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar llvm g++-multilib bison gperf zlib1g-dev automake
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev binutils-aarch64-linux-gnu
          
          mkdir -p "${{ env.CONFIG }}/git-repo"
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > "${{ env.CONFIG }}/git-repo/repo"
          chmod a+rx "${{ env.CONFIG }}/git-repo/repo"
          echo "REPO=${{ github.workspace }}/${{ env.CONFIG }}/git-repo/repo" >> $GITHUB_ENV

      - name: Initialize and Sync Kernel Source
        run: |
          cd "$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://github.com/xiakehelper/BUILD_OP9_KERNEL.git -b main -m manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
          
          # Sync repo and apply patches
          $REPO --trace sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

          set -x
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/clang/host/linux-x86/clang-r416183b/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin" >> $GITHUB_PATH

      - name: Add SYSTEM Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Adding configuration settings to gki_defconfig..."

          #Add Docker config setting
          # 2
          echo "CONFIG_HOLES_IN_ZONE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HZ_250=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HZ=250" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCHED_HRTICK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SPARSEMEM_ENABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SPARSEMEM_DEFAULT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SELECT_MEMORY_MODEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_FLATMEM_ENABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_PFN_VALID=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HW_PERF_EVENTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SYS_SUPPORTS_HUGETLBFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAVE_SHADOW_CALL_STACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FORCE_MAX_ZONEORDER=11" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UNMAP_KERNEL_AT_EL0=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MITIGATE_SPECTRE_BRANCH_HISTORY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RODATA_FULL_DEFAULT_ENABLED=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_TAGGED_ADDR_ABI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KUSER_HELPERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMPAT_VDSO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_THUMB2_COMPAT_VDSO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_HW_AFDBM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_PAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_LDAPR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_LSE_ATOMICS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_LSE_ATOMICS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_USE_LSE_ATOMICS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_VHE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_UAO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_RAS_EXTN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_CNP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_PTR_AUTH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_BRANCH_PROT_PAC_RET=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_SIGN_RETURN_ADDRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_PAC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_CFI_NEGATE_RA_STATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_AMU_EXTN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_ARMV8_4=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_TLB_RANGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AS_HAS_ARMV8_5=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_BTI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_BTI_KERNEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_BRANCH_PROT_PAC_RET_BTI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_E0PD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_RANDOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_AS_HAS_MTE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_MTE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_SVE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_MODULE_PLTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RELOCATABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CMDLINE=\"ignore_loglevel\"" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_STUB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BUILD_ARM64_KERNEL_COMPRESSION_GZIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BUILD_ARM64_DT_OVERLAY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_ENABLE_THP_MIGRATION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SUSPEND=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SUSPEND_FREEZER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_SLEEP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_SLEEP_SMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_CLK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_GENERIC_DOMAINS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_GENERIC_DOMAINS_SLEEP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_GENERIC_DOMAINS_OF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_PM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HIBERNATION_POSSIBLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUSPEND_POSSIBLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_IDLE_GOV_MENU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_IDLE_GOV_TEO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DT_IDLE_STATES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_PSCI_CPUIDLE_DOMAIN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_FREQ_GOV_ATTR_SET=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_FREQ_GOV_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_FREQ_GOV_PERFORMANCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_QCOM_CPUFREQ_HW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_SCMI_PMU_PROTOCOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_SCMI_C1DCVS_PROTOCOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_SCMI_PLH_PROTOCOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_SCMI_GPLAF_PROTOCOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SCM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTEE_SHM_BRIDGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_ESRT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_VARS_PSTORE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_PARAMS_FROM_FDT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_RUNTIME_WRAPPERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_GENERIC_STUB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_GENERIC_STUB_INITRD_CMDLINE_LOADER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EFI_EARLYCON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_PSCI_FW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARM_SMCCC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_SMCCC_SOC_ID=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_TZ_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUPPORTS_ACPI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IRQ_BYPASS_MANAGER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VIRTUALIZATION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KVM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_IRQCHIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_IRQFD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_IRQ_ROUTING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_EVENTFD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KVM_MMIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_MSI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_CPU_RELAX_INTERCEPT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KVM_VFIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_ARCH_TLB_FLUSH_ALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KVM_GENERIC_DIRTYLOG_READ_PROTECT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_IRQ_BYPASS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KVM_VCPU_RUN_PID_CHANGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GH_ARM64_DRV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_SHA256_ARM64=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_AES_ARM64_CE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_CHACHA20_NEON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_POLY1305_NEON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SET_FS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UPROBES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KPROBES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KRETPROBES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_NMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_TRACEHOOK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_DMA_CONTIGUOUS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_SMP_IDLE_THREAD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_IDLE_POLL_SETUP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_FORTIFY_SOURCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_KEEPINITRD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_SET_MEMORY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_SET_DIRECT_MAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ASM_MODVERSIONS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_RSEQ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_HW_BREAKPOINT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_PERF_REGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_PERF_USER_STACK_DUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_JUMP_LABEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MMU_GATHER_TABLE_FREE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MMU_GATHER_RCU_TABLE_FREE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_CMPXCHG_LOCAL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_CMPXCHG_DOUBLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_SECCOMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_SECCOMP_FILTER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SECCOMP_FILTER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_STACKLEAK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_STACKPROTECTOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STACKPROTECTOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STACKPROTECTOR_STRONG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUPPORTS_SHADOW_CALL_STACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUPPORTS_LTO_CLANG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAS_LTO_CLANG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LTO_NONE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_CONTEXT_TRACKING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_MOVE_PUD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_MOVE_PMD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_HUGE_VMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_MOD_ARCH_SPECIFIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MODULES_USE_ELF_RELA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_ELF_RANDOMIZE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_MMAP_RND_BITS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_MMAP_RND_BITS=18" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_MMAP_RND_COMPAT_BITS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_MMAP_RND_COMPAT_BITS=11" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CLONE_BACKWARDS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OLD_SIGSUSPEND3=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMPAT_OLD_SIGACTION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMPAT_32BIT_TIME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_VMAP_STACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VMAP_STACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STRICT_KERNEL_RWX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STRICT_MODULE_RWX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_COMPILER_H=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_USE_MEMREMAP_PROT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_RELR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RELR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_GCC_PLUGINS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RT_MUTEXES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BASE_SMALL=0" >> ./arch/arm64/configs/gki_defconfig
          
      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Running sed commands..."
          
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res-xiakehelper"|' ./scripts/setlocalversion
          sed -i 's/-dirty//' ./scripts/setlocalversion
         
          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC 2025"}' ./scripts/mkcompile_h

      - name: GCC Build
        run: |
          cd "$CONFIG"
          sed -i s/build-user/xiakehelper/g build/_setup_env.sh
          sed -i s/build-host/oos/g build/_setup_env.sh
          cp $GITHUB_WORKSPACE/build.config.lemonadep ./kernel/msm-5.4/build.config.lemonadep
          patch -p1 -F 3 < $GITHUB_WORKSPACE/Patches/fix_op9p_build_errors.patch
          patch -p1 --binary -F 3 < $GITHUB_WORKSPACE/Patches/si_audo_codec_build.patch
          sed -i 's/^UAPI_CFLAGS :=.*/& -Wno-gnu-variable-sized-type-not-at-end/' ./kernel/msm-5.4/usr/include/Makefile
          
          
          # Export variables for immediate use in the shell
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export ARCH=arm64
          export SUBARCH=arm64
          
          # Append variables to $GITHUB_ENV for GitHub Actions
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          
          # Export build configuration variables
          export BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep
          export VARIANT=qgki
          export BUILTIN=1
          export LTO=thin
          export POLLY=1
          export GRAPHITE=1
          export PGO=1
          export SKIP_MRPROPER=1
          export BUILD_KERNEL=1
          export CC=clang
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJSIZE=llvm-size
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export READELF=llvm-readelf
          export STRIP=llvm-strip
          export LLVM_AR=llvm-ar
          export LLVM_DIS=llvm-dis
          export LDGOLD=aarch64-linux-gnu-ld.gold
          export LLVM=1
          export LLVM_IAS=1
          # export AS=aarch64-linux-gnu-as
          
          # Append build configuration variables to $GITHUB_ENV
          echo "BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep" >> $GITHUB_ENV
          echo "VARIANT=qgki" >> $GITHUB_ENV
          echo "BUILTIN=1" >> $GITHUB_ENV
          echo "LTO=thin" >> $GITHUB_ENV
          echo "POLLY=1" >> $GITHUB_ENV
          echo "GRAPHITE=1" >> $GITHUB_ENV
          echo "PGO=1" >> $GITHUB_ENV
          echo "SKIP_MRPROPER=1" >> $GITHUB_ENV
          echo "BUILD_KERNEL=1" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
          echo "LD=ld.lld" >> $GITHUB_ENV
          echo "AR=llvm-ar" >> $GITHUB_ENV
          echo "NM=llvm-nm" >> $GITHUB_ENV
          echo "OBJSIZE=llvm-size" >> $GITHUB_ENV
          echo "OBJCOPY=llvm-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=llvm-objdump" >> $GITHUB_ENV
          echo "READELF=llvm-readelf" >> $GITHUB_ENV
          echo "STRIP=llvm-strip" >> $GITHUB_ENV
          echo "LLVM_AR=llvm-ar" >> $GITHUB_ENV
          echo "LLVM_DIS=llvm-dis" >> $GITHUB_ENV
          echo "LDGOLD=aarch64-linux-gnu-ld.gold" >> $GITHUB_ENV
          echo "LLVM=1" >> $GITHUB_ENV
          echo "LLVM_IAS=1" >> $GITHUB_ENV
          # echo "AS=aarch64-linux-gnu-as" >> $GITHUB_ENV
          
          LLVM=1 LLVM_IAS=1 build/build.sh -j4

      - name: Create zip
        run: |
          cd "$CONFIG"
          mkdir MyKernel
          chmod 777 MyKernel
          cp out/msm-5.4-lahaina-qgki/dist/Image MyKernel/
          cd MyKernel/ && zip -r9 OP9P-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
          cd ../

      - name: Archive Kernel Source
        if: always()
        run: |
          cd "$CONFIG"
          tar -czf kernel-source.tar.gz --exclude='.git' --exclude='out' --warning=no-file-changed ./kernel ./vendor
          ls -la

      - name: Upload Kernel Source Archive
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-source-archive
          path: ${{ env.CONFIG }}/kernel-source.tar.gz
          retention-days: 7

      - uses: actions/upload-artifact@main
        with:
         name: "lemonadep-ksun-release-${{ env.KSUNVER }}-zip"
         path: ${{ env.CONFIG }}/MyKernel/*.zip
