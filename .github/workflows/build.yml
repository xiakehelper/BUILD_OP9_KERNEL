name: Build
permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch: # This allows this workflow to be called from another workflow
    

jobs:
  build-kernel-oneplus-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup System
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
          
          df -h
          
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/.ghcup /opt/hostedtoolcache/CodeQL /usr/local/share/powershell /usr/share/swift || true
          sudo docker image prune --all --force
          echo "some directories deleted"
          
          # Remove large unwanted packages
          sudo apt-get purge -y \
            aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            firefox gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete \
            unixodbc-dev yarn chrpath libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion microsoft-edge-stable || true
            
          # Regex-based purges (for bulk families like mysql, php, dotnet)
          sudo apt-get purge -y $(dpkg-query -W -f='${binary:Package}\n' | grep -E '^mysql|^php|^dotnet') || true
          
          # Clean up
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "some packages purged"
          
          df -h

      - uses: actions/checkout@v4

      - name: Set CONFIG Environment Variable
        run: |
          CONFIG="OP9"
          echo "Creating folder for configuration: $CONFIG..."
          mkdir -p "$CONFIG"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo and Python
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python3
          sudo apt-get install -y pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler 
          sudo apt-get install -y libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc
          sudo apt-get install -y libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree 
          sudo apt-get install -y pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl 
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar llvm g++-multilib bison gperf zlib1g-dev automake
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev binutils-aarch64-linux-gnu
          
          mkdir -p "${{ env.CONFIG }}/git-repo"
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > "${{ env.CONFIG }}/git-repo/repo"
          chmod a+rx "${{ env.CONFIG }}/git-repo/repo"
          echo "REPO=${{ github.workspace }}/${{ env.CONFIG }}/git-repo/repo" >> $GITHUB_ENV

      - name: Initialize and Sync Kernel Source
        run: |
          cd "$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://github.com/xiakehelper/BUILD_OP9_KERNEL.git -b main -m manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
          
          # Sync repo and apply patches
          $REPO --trace sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

          set -x
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/clang/host/linux-x86/clang-r416183b/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin" >> $GITHUB_PATH

      - name: Add SYSTEM Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Adding configuration settings to gki_defconfig..."

          #Add Docker config setting
          # 7
          echo "CONFIG_IPA3=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_USB_BAM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_GENI_SE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_CLK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CLKDEV_LOOKUP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_CLK_PREPARE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI3516CV300=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI3519=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI3660=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI3670=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI3798CV200=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_HI6220=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RESET_HISI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STUB_CLK_HI6220=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STUB_CLK_HI3660=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_CLK_QCOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_CLK_RPMH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_GCC_WAIPIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_VIDEOCC_WAIPIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_GPUCC_WAIPIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_DISPCC_WAIPIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_CAMCC_WAIPIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_GDSC_REGULATOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SM_GCC_DIWALI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SM_CAMCC_DIWALI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SM_GPUCC_DIWALI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SM_VIDEOCC_DIWALI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SM_DISPCC_DIWALI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HWSPINLOCK_QCOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TIMER_OF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TIMER_PROBE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CLKSRC_MMIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_ARCH_TIMER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FSL_ERRATUM_A008585=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HISILICON_ERRATUM_161010101=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM64_ERRATUM_858921=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_TIMER_SP804=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SPRD_TIMER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HI3660_MBOX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HI6220_MBOX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_QMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_IOVA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_API=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_IOVA_ALIGNMENT=9" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_IO_PGTABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_IO_PGTABLE_LPAE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_IO_PGTABLE_FAST=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_IOMMU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IOMMU_DMA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_IOMMU_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_SMMU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_SMMU_CONTEXT_FAULT_RETRY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_SMMU_DISABLE_BYPASS_BY_DEFAULT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_LAZY_MAPPING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_IOMMU_UTIL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REMOTEPROC_CDEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PIL_INFO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_RPROC_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_Q6V5_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_Q6V5_PAS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SPSS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SYSMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PANIC_ON_NOTIF_TIMEOUT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPROC_SYSMON_NOTIF_TIMEOUT=20000" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPROC_SSR_NOTIF_TIMEOUT=20000" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SPSS_AC_RESTRICTION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPMSG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPMSG_QCOM_GLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPMSG_QCOM_GLINK_SMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPMSG_QCOM_GLINK_SPSS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPMSG_QCOM_SMD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_AOSS_QMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_COMMAND_DB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_CPUSS_SLEEP_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_QDSS_BRIDGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MEM_OFFLINE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BUG_ON_HW_MEM_ONLINE_FAIL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MEM_BUF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MEM_BUF_DEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SHOW_SUSPEND_EPOCH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_QBT_HANDLER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MSM_IPCC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_GIC_INTERRUPT_ROUTING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_RIMPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_LLCC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_LLCC_PERFMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MDT_LOADER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QPNP_PBS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PDR_HELPERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PANIC_ON_PDR_NOTIF_TIMEOUT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PDR_INDICATION_NOTIF_TIMEOUT=9000" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_RAMDUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_BOOT_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_QMI_HELPERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MEM_SHARE_QMI_SERVICE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_QFPROM_SYS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_RPMH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_RUN_QUEUE_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MEMORY_DUMP_V2=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SMEM_STATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SMP2P=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SOCINFO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SOC_SLEEP_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_ADSP_SLEEPMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_DCC_V2=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MICRODUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SECURE_BUFFER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_GLINK_PKT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_PERFORMANCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QSEE_IPC_IRQ_BRIDGE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SMP2P_SLEEPSTATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_GLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_PMIC_GLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_CHARGER_ULOG_GLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_ALTMODE_GLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_PMIC_PON_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_CDSP_LOADER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PMU_LIB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_DCVS_FP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_DCVS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_MEMLAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_BWMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_PMU_SCMI_CLIENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_C1DCVS_SCMI_CLIENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_HW_MEMLAT_LOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_PLH_SCMI_CLIENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_GPLAF_SCMI_CLIENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SUBSYSTEM_SLEEP_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SYSMON_SUBSYSTEM_STATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_SYS_PM_VX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_FSA4480_I2C=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_CDSP_RM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_WDT_CORE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SOC_WATCHDOG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_IRQ_STAT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_LOGBUF_VENDOR_HOOKS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_FORCE_WDOG_BITE_ON_PANIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_WATCHDOG_BARK_TIME=11000" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_WATCHDOG_PET_TIME=9360" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_WATCHDOG_IPI_PING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_WATCHDOG_WAKEUP_ENABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_SPCOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_EUD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_CPU_VENDOR_HOOKS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SMCINVOKE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_GUESTVM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_HYP_CORE_CTL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_CRYPTO_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QTI_HW_KEY_MANAGER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_EXT_DISPLAY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_PANEL_EVENT_NOTIFIER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_BALANCE_ANON_FILE_RECLAIM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ICNSS2_QMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SPEC_SYNC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MSM_TMECOM_QMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PM_DEVFREQ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EXTCON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IIO_CONSUMERS_PER_TRIGGER=2" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_VADC_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_SPMI_ADC5=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PWM_SYSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IRQCHIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC_MAX_NR=1" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC_V2M=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC_V3=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC_V3_ITS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_GIC_V3_ITS_PCI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HISILICON_IRQ_MBIGEN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PARTITION_PERCPU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RESET_CONTROLLER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RESET_SCMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_RESET_HI3660=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMMON_RESET_HI6220=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PHY_QCOM_UFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PHY_QCOM_UFS_V4=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PHY_QCOM_UFS_14NM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PHY_QCOM_UFS_V3=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_POWERCAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DTPM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_PMU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_LLCC_PMU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ANDROID_BINDER_DEVICES=\"binder,hwbinder,vndbinder,binder1,binder2,binder3,binder4,binder5,binder6,binder7,binder8,binder9,binder10,binder11,binder12,binder13,binder14,binder15,binder16,binder17,binder18,binder19,binder20,binder21,binder22,binder23,binder24,binder25,binder26,binder27,binder28,binder29,binder30,binder31,binder32,binder33,binder34,binder35,binder36,binder37,binder38,binder39,binder40,binder41,binder42,binder43,binder44,binder45,binder46,binder47,binder48,binder49,binder50,binder51,binder52,binder53,binder54,binder55,binder56,binder57,binder58,binder59,binder60,binder61,binder62,binder63,binder64,binder65,binder66,binder67,binder68,binder69,binder70,binder71,binder72\"" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ANDROID_DEBUG_SYMBOLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ANDROID_VENDOR_OEM_DATA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACE_GPU_MEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BLK_DEV_PMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ND_CLAIM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ND_BTT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BTT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_PMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DAX_DRIVER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DAX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NVMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NVMEM_SYSFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_QFPROM=y" >> ./arch/arm64/configs/gki_defconfig
          
      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Running sed commands..."
          
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res-xiakehelper"|' ./scripts/setlocalversion
          sed -i 's/-dirty//' ./scripts/setlocalversion
         
          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC 2025"}' ./scripts/mkcompile_h

      - name: GCC Build
        run: |
          cd "$CONFIG"
          sed -i s/build-user/xiakehelper/g build/_setup_env.sh
          sed -i s/build-host/oos/g build/_setup_env.sh
          cp $GITHUB_WORKSPACE/build.config.lemonadep ./kernel/msm-5.4/build.config.lemonadep
          patch -p1 -F 3 < $GITHUB_WORKSPACE/Patches/fix_op9p_build_errors.patch
          patch -p1 --binary -F 3 < $GITHUB_WORKSPACE/Patches/si_audo_codec_build.patch
          sed -i 's/^UAPI_CFLAGS :=.*/& -Wno-gnu-variable-sized-type-not-at-end/' ./kernel/msm-5.4/usr/include/Makefile
          
          
          # Export variables for immediate use in the shell
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export ARCH=arm64
          export SUBARCH=arm64
          
          # Append variables to $GITHUB_ENV for GitHub Actions
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          
          # Export build configuration variables
          export BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep
          export VARIANT=qgki
          export BUILTIN=1
          export LTO=thin
          export POLLY=1
          export GRAPHITE=1
          export PGO=1
          export SKIP_MRPROPER=1
          export BUILD_KERNEL=1
          export CC=clang
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJSIZE=llvm-size
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export READELF=llvm-readelf
          export STRIP=llvm-strip
          export LLVM_AR=llvm-ar
          export LLVM_DIS=llvm-dis
          export LDGOLD=aarch64-linux-gnu-ld.gold
          export LLVM=1
          export LLVM_IAS=1
          # export AS=aarch64-linux-gnu-as
          
          # Append build configuration variables to $GITHUB_ENV
          echo "BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep" >> $GITHUB_ENV
          echo "VARIANT=qgki" >> $GITHUB_ENV
          echo "BUILTIN=1" >> $GITHUB_ENV
          echo "LTO=thin" >> $GITHUB_ENV
          echo "POLLY=1" >> $GITHUB_ENV
          echo "GRAPHITE=1" >> $GITHUB_ENV
          echo "PGO=1" >> $GITHUB_ENV
          echo "SKIP_MRPROPER=1" >> $GITHUB_ENV
          echo "BUILD_KERNEL=1" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
          echo "LD=ld.lld" >> $GITHUB_ENV
          echo "AR=llvm-ar" >> $GITHUB_ENV
          echo "NM=llvm-nm" >> $GITHUB_ENV
          echo "OBJSIZE=llvm-size" >> $GITHUB_ENV
          echo "OBJCOPY=llvm-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=llvm-objdump" >> $GITHUB_ENV
          echo "READELF=llvm-readelf" >> $GITHUB_ENV
          echo "STRIP=llvm-strip" >> $GITHUB_ENV
          echo "LLVM_AR=llvm-ar" >> $GITHUB_ENV
          echo "LLVM_DIS=llvm-dis" >> $GITHUB_ENV
          echo "LDGOLD=aarch64-linux-gnu-ld.gold" >> $GITHUB_ENV
          echo "LLVM=1" >> $GITHUB_ENV
          echo "LLVM_IAS=1" >> $GITHUB_ENV
          # echo "AS=aarch64-linux-gnu-as" >> $GITHUB_ENV
          
          LLVM=1 LLVM_IAS=1 build/build.sh -j4

      - name: Create zip
        run: |
          cd "$CONFIG"
          mkdir MyKernel
          chmod 777 MyKernel
          cp out/msm-5.4-lahaina-qgki/dist/Image MyKernel/
          cd MyKernel/ && zip -r9 OP9P-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
          cd ../

      - name: Archive Kernel Source
        if: always()
        run: |
          cd "$CONFIG"
          tar -czf kernel-source.tar.gz --exclude='.git' --exclude='out' --warning=no-file-changed ./kernel ./vendor
          ls -la

      - name: Upload Kernel Source Archive
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-source-archive
          path: ${{ env.CONFIG }}/kernel-source.tar.gz
          retention-days: 7

      - uses: actions/upload-artifact@main
        with:
         name: "lemonadep-ksun-release-${{ env.KSUNVER }}-zip"
         path: ${{ env.CONFIG }}/MyKernel/*.zip
