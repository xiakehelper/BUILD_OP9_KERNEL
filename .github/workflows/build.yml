name: Build
permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch: # This allows this workflow to be called from another workflow
    

jobs:
  build-kernel-oneplus-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup System
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
          
          df -h
          
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/.ghcup /opt/hostedtoolcache/CodeQL /usr/local/share/powershell /usr/share/swift || true
          sudo docker image prune --all --force
          echo "some directories deleted"
          
          # Remove large unwanted packages
          sudo apt-get purge -y \
            aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            firefox gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete \
            unixodbc-dev yarn chrpath libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion microsoft-edge-stable || true
            
          # Regex-based purges (for bulk families like mysql, php, dotnet)
          sudo apt-get purge -y $(dpkg-query -W -f='${binary:Package}\n' | grep -E '^mysql|^php|^dotnet') || true
          
          # Clean up
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "some packages purged"
          
          df -h

      - uses: actions/checkout@v4

      - name: Set CONFIG Environment Variable
        run: |
          CONFIG="OP9"
          echo "Creating folder for configuration: $CONFIG..."
          mkdir -p "$CONFIG"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo and Python
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python3
          sudo apt-get install -y pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler 
          sudo apt-get install -y libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc
          sudo apt-get install -y libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree 
          sudo apt-get install -y pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl 
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar llvm g++-multilib bison gperf zlib1g-dev automake
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev binutils-aarch64-linux-gnu
          
          mkdir -p "${{ env.CONFIG }}/git-repo"
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > "${{ env.CONFIG }}/git-repo/repo"
          chmod a+rx "${{ env.CONFIG }}/git-repo/repo"
          echo "REPO=${{ github.workspace }}/${{ env.CONFIG }}/git-repo/repo" >> $GITHUB_ENV

      - name: Initialize and Sync Kernel Source
        run: |
          cd "$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://github.com/xiakehelper/BUILD_OP9_KERNEL.git -b main -m manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
          
          # Sync repo and apply patches
          $REPO --trace sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

          set -x
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/clang/host/linux-x86/clang-r416183b/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin" >> $GITHUB_PATH

      - name: Add SYSTEM Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Adding configuration settings to gki_defconfig..."

          #Add Docker config setting
          # 4
          echo "CONFIG_NET_SCH_CODEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_SCH_FQ_CODEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_SCH_FQ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_BASIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_TCINDEX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_FW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CLS_U32_MARK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_FLOW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_CGROUP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CLS_MATCHALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_EMATCH_STACK=32" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_EMATCH_CMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_EMATCH_NBYTE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_EMATCH_META=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_EMATCH_TEXT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_ACT_POLICE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_ACT_GACT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_ACT_MIRRED=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_ACT_SKBEDIT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_ACT_BPF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_SCH_FIFO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VSOCKETS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VSOCKETS_DIAG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VSOCKETS_LOOPBACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VIRTIO_VSOCKETS_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_L3_MASTER_DEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QRTR_NODE_ID=1" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QRTR_WAKEUP_MS=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RFS_ACCEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_NET_PRIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_NET_CLASSID=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_RX_BUSY_POLL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BQL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_FLOW_LIMIT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN_RAW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN_BCM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN_GW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN_DEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CAN_CALC_BITTIMING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_BREDR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_LE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_BCM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_QCA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_HCIUART_SERDEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BT_HCIUART_H4=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STREAM_PARSER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FIB_RULES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_WIRELESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NL80211_TESTMODE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFG80211_REQUIRE_SIGNED_REGDB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFG80211_USE_KERNEL_REGDB_KEYS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFG80211_DEFAULT_PS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CFG80211_CRDA_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAC80211_HAS_RC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAC80211_RC_MINSTREL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAC80211_RC_DEFAULT=\"minstrel_ht\"" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAC80211_STA_HASH_MAX_SIZE=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RFKILL_LEDS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NFC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LWTUNNEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LWTUNNEL_BPF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DST_CACHE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GRO_CELLS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_SOCK_MSG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ETHTOOL_NETLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_EBPF_JIT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARM_AMBA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_PCI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_DOMAINS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_DOMAINS_GENERIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_SYSCALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIEAER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIEASPM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIEASPM_PERFORMANCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIE_PME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_MSI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_MSI_IRQ_DOMAIN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_QUIRKS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_ATS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_ECAM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_IOV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIE_BUS_PERFORMANCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_HOST_COMMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCI_MSM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIE_DW=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PCIE_DW_HOST=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UEVENT_HELPER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UEVENT_HELPER_PATH=\"\"" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEVTMPFS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEVTMPFS_MOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STANDALONE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PREVENT_FIRMWARE_BUILD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FW_LOADER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FW_LOADER_PAGED_BUF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EXTRA_FIRMWARE=\"\"" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_WANT_DEV_COREDUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ALLOW_DEV_COREDUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEV_COREDUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SYS_HYPERVISOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_CPU_AUTOPROBE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_CPU_VULNERABILITIES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SOC_BUS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP_I2C=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP_SPI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP_SPMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP_MMIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REGMAP_IRQ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_SHARED_BUFFER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_ARCH_TOPOLOGY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QCOM_EBI2=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MHI_BUS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MHI_BUS_MISC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DTC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_FLATTREE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_EARLY_FLATTREE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_KOBJ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_ADDRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_IRQ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_NET=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_RESERVED_MEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OF_RESERVED_MEM_CHECK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BLK_DEV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZRAM_WRITEBACK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BLK_DEV_RAM_COUNT=16" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NVME_CORE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BLK_DEV_NVME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NVME_HWMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SRAM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_QSEECOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HDCP_QSEECOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_MOD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_DMA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CHR_DEV_SG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_LOWLEVEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UFS_DBG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_UFS_QCOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_UFS_CRYPTO_QTI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCSI_UFS_HPB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_PATA_PLATFORM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BLK_DEV_DM_BUILTIN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DM_BUFIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DM_BIO_PRISON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DM_PERSISTENT_DATA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DM_THIN_PROVISIONING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DM_USER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MII=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_CORE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_WIREGUARD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IFB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MACVLAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPVLAN_L3S=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPVLAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_VXLAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ETHERNET=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_R8111H=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_3COM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_ADAPTEC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_AGERE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_ALACRITECH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_ALTEON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_AMAZON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_AMD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_AQUANTIA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_ARC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_ATHEROS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_AURORA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_BROADCOM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_BROCADE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_CADENCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_CAVIUM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_CHELSIO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_CISCO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_CORTINA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_DEC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_DLINK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_EMULEX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_EZCHIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_GOOGLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_HISILICON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_HUAWEI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_I825XX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_INTEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MARVELL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MELLANOX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MICREL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MICROCHIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MICROSEMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_MYRI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_NATSEMI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_NETERION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_NETRONOME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_NI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NET_VENDOR_8390=y" >> ./arch/arm64/configs/gki_defconfig
 
          
      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Running sed commands..."
          
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res-xiakehelper"|' ./scripts/setlocalversion
          sed -i 's/-dirty//' ./scripts/setlocalversion
         
          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC 2025"}' ./scripts/mkcompile_h

      - name: GCC Build
        run: |
          cd "$CONFIG"
          sed -i s/build-user/xiakehelper/g build/_setup_env.sh
          sed -i s/build-host/oos/g build/_setup_env.sh
          cp $GITHUB_WORKSPACE/build.config.lemonadep ./kernel/msm-5.4/build.config.lemonadep
          patch -p1 -F 3 < $GITHUB_WORKSPACE/Patches/fix_op9p_build_errors.patch
          patch -p1 --binary -F 3 < $GITHUB_WORKSPACE/Patches/si_audo_codec_build.patch
          sed -i 's/^UAPI_CFLAGS :=.*/& -Wno-gnu-variable-sized-type-not-at-end/' ./kernel/msm-5.4/usr/include/Makefile
          
          
          # Export variables for immediate use in the shell
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export ARCH=arm64
          export SUBARCH=arm64
          
          # Append variables to $GITHUB_ENV for GitHub Actions
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          
          # Export build configuration variables
          export BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep
          export VARIANT=qgki
          export BUILTIN=1
          export LTO=thin
          export POLLY=1
          export GRAPHITE=1
          export PGO=1
          export SKIP_MRPROPER=1
          export BUILD_KERNEL=1
          export CC=clang
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJSIZE=llvm-size
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export READELF=llvm-readelf
          export STRIP=llvm-strip
          export LLVM_AR=llvm-ar
          export LLVM_DIS=llvm-dis
          export LDGOLD=aarch64-linux-gnu-ld.gold
          export LLVM=1
          export LLVM_IAS=1
          # export AS=aarch64-linux-gnu-as
          
          # Append build configuration variables to $GITHUB_ENV
          echo "BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep" >> $GITHUB_ENV
          echo "VARIANT=qgki" >> $GITHUB_ENV
          echo "BUILTIN=1" >> $GITHUB_ENV
          echo "LTO=thin" >> $GITHUB_ENV
          echo "POLLY=1" >> $GITHUB_ENV
          echo "GRAPHITE=1" >> $GITHUB_ENV
          echo "PGO=1" >> $GITHUB_ENV
          echo "SKIP_MRPROPER=1" >> $GITHUB_ENV
          echo "BUILD_KERNEL=1" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
          echo "LD=ld.lld" >> $GITHUB_ENV
          echo "AR=llvm-ar" >> $GITHUB_ENV
          echo "NM=llvm-nm" >> $GITHUB_ENV
          echo "OBJSIZE=llvm-size" >> $GITHUB_ENV
          echo "OBJCOPY=llvm-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=llvm-objdump" >> $GITHUB_ENV
          echo "READELF=llvm-readelf" >> $GITHUB_ENV
          echo "STRIP=llvm-strip" >> $GITHUB_ENV
          echo "LLVM_AR=llvm-ar" >> $GITHUB_ENV
          echo "LLVM_DIS=llvm-dis" >> $GITHUB_ENV
          echo "LDGOLD=aarch64-linux-gnu-ld.gold" >> $GITHUB_ENV
          echo "LLVM=1" >> $GITHUB_ENV
          echo "LLVM_IAS=1" >> $GITHUB_ENV
          # echo "AS=aarch64-linux-gnu-as" >> $GITHUB_ENV
          
          LLVM=1 LLVM_IAS=1 build/build.sh -j4

      - name: Create zip
        run: |
          cd "$CONFIG"
          mkdir MyKernel
          chmod 777 MyKernel
          cp out/msm-5.4-lahaina-qgki/dist/Image MyKernel/
          cd MyKernel/ && zip -r9 OP9P-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
          cd ../

      - name: Archive Kernel Source
        if: always()
        run: |
          cd "$CONFIG"
          tar -czf kernel-source.tar.gz --exclude='.git' --exclude='out' --warning=no-file-changed ./kernel ./vendor
          ls -la

      - name: Upload Kernel Source Archive
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-source-archive
          path: ${{ env.CONFIG }}/kernel-source.tar.gz
          retention-days: 7

      - uses: actions/upload-artifact@main
        with:
         name: "lemonadep-ksun-release-${{ env.KSUNVER }}-zip"
         path: ${{ env.CONFIG }}/MyKernel/*.zip
