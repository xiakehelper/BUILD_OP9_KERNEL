name: Build
permissions:
  contents: write  # Allow writing to repository contents (for pushing tags)
  actions: write   # Allows triggering actions

on:
  workflow_dispatch: # This allows this workflow to be called from another workflow
    

jobs:
  build-kernel-oneplus-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Setup System
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV
          
          df -h
          
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/.ghcup /opt/hostedtoolcache/CodeQL /usr/local/share/powershell /usr/share/swift || true
          sudo docker image prune --all --force
          echo "some directories deleted"
          
          # Remove large unwanted packages
          sudo apt-get purge -y \
            aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            firefox gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick \
            libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
            mercurial apt-transport-https mono-complete \
            unixodbc-dev yarn chrpath libxft-dev \
            libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
            snmp pollinate libpq-dev postgresql-client powershell ruby-full \
            sphinxsearch subversion microsoft-edge-stable || true
            
          # Regex-based purges (for bulk families like mysql, php, dotnet)
          sudo apt-get purge -y $(dpkg-query -W -f='${binary:Package}\n' | grep -E '^mysql|^php|^dotnet') || true
          
          # Clean up
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "some packages purged"
          
          df -h

      - uses: actions/checkout@v4

      - name: Set CONFIG Environment Variable
        run: |
          CONFIG="OP9"
          echo "Creating folder for configuration: $CONFIG..."
          mkdir -p "$CONFIG"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo and Python
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache python3
          sudo apt-get install -y pngcrush schedtool dpkg-dev liblz4-tool make optipng maven device-tree-compiler 
          sudo apt-get install -y libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc
          sudo apt-get install -y libxml2-utils libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools lzop flex tree 
          sudo apt-get install -y pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl 
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar llvm g++-multilib bison gperf zlib1g-dev automake
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev binutils-aarch64-linux-gnu
          
          mkdir -p "${{ env.CONFIG }}/git-repo"
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > "${{ env.CONFIG }}/git-repo/repo"
          chmod a+rx "${{ env.CONFIG }}/git-repo/repo"
          echo "REPO=${{ github.workspace }}/${{ env.CONFIG }}/git-repo/repo" >> $GITHUB_ENV

      - name: Initialize and Sync Kernel Source
        run: |
          cd "$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://github.com/xiakehelper/BUILD_OP9_KERNEL.git -b main -m manifest.xml --repo-rev=v2.16 --depth=1 --no-clone-bundle --no-tags
          
          # Sync repo and apply patches
          $REPO --trace sync -c --no-clone-bundle --no-tags --optimized-fetch -j$(nproc --all) --fail-fast

          set -x
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/clang/host/linux-x86/clang-r416183b/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/${{ env.CONFIG }}/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/bin" >> $GITHUB_PATH

      - name: Add SYSTEM Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Adding configuration settings to gki_defconfig..."

          #Add Docker config setting
          # 9
          echo "CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_FAST_MULTIPLIER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_USE_SYM_ANNOTATIONS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRC16=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRC32=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRC32_SLICEBY8=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LIBCRC32C=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XXHASH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AUDIT_GENERIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_AUDIT_COMPAT_GENERIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZLIB_INFLATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZLIB_DEFLATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LZO_COMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LZO_DECOMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LZ4_COMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LZ4HC_COMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LZ4_DECOMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZSTD_COMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ZSTD_DECOMPRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_X86=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_POWERPC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_IA64=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_ARM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_ARMTHUMB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_SPARC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XZ_DEC_BCJ=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DECOMPRESS_GZIP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DECOMPRESS_LZ4=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DECOMPRESS_ZSTD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_ALLOCATOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REED_SOLOMON=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REED_SOLOMON_ENC8=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_REED_SOLOMON_DEC8=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TEXTSEARCH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TEXTSEARCH_KMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TEXTSEARCH_BM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TEXTSEARCH_FSM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_INTERVAL_TREE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_XARRAY_MULTI=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ASSOCIATIVE_ARRAY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAS_IOMEM=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAS_IOPORT_MAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAS_DMA=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_OPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NEED_SG_DMA_LENGTH=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NEED_DMA_MAP_STATE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_DMA_ADDR_T_64BIT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_DECLARE_COHERENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_SETUP_DMA_OPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SWIOTLB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_NONCOHERENT_MMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_COHERENT_POOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_REMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DMA_DIRECT_REMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CMA_SIZE_MBYTES=3072" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CMA_SIZE_SEL_MBYTES=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CMA_ALIGNMENT=8" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SGL_ALLOC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CPU_RMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DQL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GLOB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NLATTR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CLZ_TAB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MPILIB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LIBFDT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_OID_REGISTRY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UCS2_STRING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_GENERIC_VDSO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_GETTIMEOFDAY=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_COMPAT_VDSO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_VDSO_TIME_NS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FONT_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FONTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FONT_8x16=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FONT_AUTOSELECT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SG_POOL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MEMREGION=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_STACKWALK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SBITMAP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PRINTK_CALLER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CONSOLE_LOGLEVEL_QUIET=4" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SYMBOLIC_ERRNAME=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_BUGVERBOSE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_INFO_BTF=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FRAME_WARN=2048" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HEADERS_INSTALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_WANT_FRAME_POINTERS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FRAME_POINTER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE=0x0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_FS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_FS_ALLOW_ALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KGDB=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_UBSAN_SANITIZE_ALL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_KCSAN_COMPILER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_KERNEL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_MISC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_DEBUG_WX=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_PTDUMP=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_DEBUG_KMEMLEAK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KASAN=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KASAN_SW_TAGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KASAN_HW_TAGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KASAN_VMALLOC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_KASAN_GENERIC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_KASAN_SW_TAGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_ARCH_KFENCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KFENCE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KFENCE_STATIC_KEYS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KFENCE_SAMPLE_INTERVAL=500" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KFENCE_NUM_OBJECTS=63" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_KFENCE_STRESS_TEST_FAULTS=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PANIC_ON_OOPS_VALUE=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PANIC_TIMEOUT=5" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LOCKUP_DETECTOR=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DETECT_HUNG_TASK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCHED_DEBUG=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCHED_INFO=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_LOCK_DEBUGGING_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACE_IRQFLAGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_STACKTRACE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_DEBUG_BUGVERBOSE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DEBUG_LIST=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RCU_CPU_STALL_TIMEOUT=21" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RCU_PANIC_ON_STALL=0" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RCU_TRACE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_NOP_TRACER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_FUNCTION_TRACER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_DYNAMIC_FTRACE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_SYSCALL_TRACEPOINTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_HAVE_C_RECORDMCOUNT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACE_CLOCK=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_RING_BUFFER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_EVENT_TRACING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CONTEXT_SWITCH_TRACER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPC_LOGGING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPC_LOG_MINIDUMP_BUFFERS=16" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PREEMPTIRQ_TRACEPOINTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACING=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_GENERIC_TRACER=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACING_SUPPORT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_FTRACE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_TRACE_PREEMPT_TOGGLE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BRANCH_PROFILE_NONE=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_UPROBE_EVENTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_BPF_EVENTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_DYNAMIC_EVENTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_PROBE_EVENTS=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_DEVMEM_IS_ALLOWED=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_ARCH_HAS_KCOV=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_CC_HAS_SANCOV_TRACE_PC=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCHED_WALT=y" >> ./arch/arm64/configs/gki_defconfig
          echo "CONFIG_SCHED_WALT_DEBUG=y" >> ./arch/arm64/configs/gki_defconfig
          
      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel/msm-5.4"
          
          echo "Running sed commands..."
          
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./arch/arm64/configs/gki_defconfig"
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res-xiakehelper"|' ./scripts/setlocalversion
          sed -i 's/-dirty//' ./scripts/setlocalversion
         
          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Thu Mar 05 04:20:00 UTC 2025"}' ./scripts/mkcompile_h

      - name: GCC Build
        run: |
          cd "$CONFIG"
          sed -i s/build-user/xiakehelper/g build/_setup_env.sh
          sed -i s/build-host/oos/g build/_setup_env.sh
          cp $GITHUB_WORKSPACE/build.config.lemonadep ./kernel/msm-5.4/build.config.lemonadep
          patch -p1 -F 3 < $GITHUB_WORKSPACE/Patches/fix_op9p_build_errors.patch
          patch -p1 --binary -F 3 < $GITHUB_WORKSPACE/Patches/si_audo_codec_build.patch
          sed -i 's/^UAPI_CFLAGS :=.*/& -Wno-gnu-variable-sized-type-not-at-end/' ./kernel/msm-5.4/usr/include/Makefile
          
          
          # Export variables for immediate use in the shell
          export CLANG_TRIPLE=aarch64-linux-gnu-
          export ARCH=arm64
          export SUBARCH=arm64
          
          # Append variables to $GITHUB_ENV for GitHub Actions
          echo "CLANG_TRIPLE=aarch64-linux-gnu-" >> $GITHUB_ENV
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "SUBARCH=arm64" >> $GITHUB_ENV
          
          # Export build configuration variables
          export BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep
          export VARIANT=qgki
          export BUILTIN=1
          export LTO=thin
          export POLLY=1
          export GRAPHITE=1
          export PGO=1
          export SKIP_MRPROPER=1
          export BUILD_KERNEL=1
          export CC=clang
          export CROSS_COMPILE=aarch64-linux-android-
          export CROSS_COMPILE_ARM32=arm-linux-androideabi-
          export LD=ld.lld
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJSIZE=llvm-size
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export READELF=llvm-readelf
          export STRIP=llvm-strip
          export LLVM_AR=llvm-ar
          export LLVM_DIS=llvm-dis
          export LDGOLD=aarch64-linux-gnu-ld.gold
          export LLVM=1
          export LLVM_IAS=1
          # export AS=aarch64-linux-gnu-as
          
          # Append build configuration variables to $GITHUB_ENV
          echo "BUILD_CONFIG=kernel/msm-5.4/build.config.lemonadep" >> $GITHUB_ENV
          echo "VARIANT=qgki" >> $GITHUB_ENV
          echo "BUILTIN=1" >> $GITHUB_ENV
          echo "LTO=thin" >> $GITHUB_ENV
          echo "POLLY=1" >> $GITHUB_ENV
          echo "GRAPHITE=1" >> $GITHUB_ENV
          echo "PGO=1" >> $GITHUB_ENV
          echo "SKIP_MRPROPER=1" >> $GITHUB_ENV
          echo "BUILD_KERNEL=1" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CROSS_COMPILE=aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_ARM32=arm-linux-androideabi-" >> $GITHUB_ENV
          echo "LD=ld.lld" >> $GITHUB_ENV
          echo "AR=llvm-ar" >> $GITHUB_ENV
          echo "NM=llvm-nm" >> $GITHUB_ENV
          echo "OBJSIZE=llvm-size" >> $GITHUB_ENV
          echo "OBJCOPY=llvm-objcopy" >> $GITHUB_ENV
          echo "OBJDUMP=llvm-objdump" >> $GITHUB_ENV
          echo "READELF=llvm-readelf" >> $GITHUB_ENV
          echo "STRIP=llvm-strip" >> $GITHUB_ENV
          echo "LLVM_AR=llvm-ar" >> $GITHUB_ENV
          echo "LLVM_DIS=llvm-dis" >> $GITHUB_ENV
          echo "LDGOLD=aarch64-linux-gnu-ld.gold" >> $GITHUB_ENV
          echo "LLVM=1" >> $GITHUB_ENV
          echo "LLVM_IAS=1" >> $GITHUB_ENV
          # echo "AS=aarch64-linux-gnu-as" >> $GITHUB_ENV
          
          LLVM=1 LLVM_IAS=1 build/build.sh -j4

      - name: Create zip
        run: |
          cd "$CONFIG"
          mkdir MyKernel
          chmod 777 MyKernel
          cp out/msm-5.4-lahaina-qgki/dist/Image MyKernel/
          cd MyKernel/ && zip -r9 OP9P-$(/bin/date -u '+%d%m%Y%I%M')-clang.zip * -x .git README.md ./*/placeholder
          cd ../

      - name: Archive Kernel Source
        if: always()
        run: |
          cd "$CONFIG"
          tar -czf kernel-source.tar.gz --exclude='.git' --exclude='out' --warning=no-file-changed ./kernel ./vendor
          ls -la

      - name: Upload Kernel Source Archive
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kernel-source-archive
          path: ${{ env.CONFIG }}/kernel-source.tar.gz
          retention-days: 7

      - uses: actions/upload-artifact@main
        with:
         name: "lemonadep-ksun-release-${{ env.KSUNVER }}-zip"
         path: ${{ env.CONFIG }}/MyKernel/*.zip
